version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      labels:
        - "org.pseudolab.project=getcloser"
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE: "https://${APP_HOST}/api"
    networks:
      - web
      - internal
    labels:
      - traefik.enable=true
      - traefik.docker.network=web

      # --- Traefik Router (frontend) ---
      - traefik.http.routers.getcloser-web.rule=Host(`${APP_HOST}`)
      - traefik.http.routers.getcloser-web.entrypoints=websecure
      - traefik.http.routers.getcloser-web.tls=true
      - traefik.http.routers.getcloser-web.tls.certresolver=le
      - traefik.http.services.getcloser-web.loadbalancer.server.port=3000

      # HTTP → HTTPS 리다이렉트 (frontend)
      - traefik.http.routers.getcloser-web-http.rule=Host(`${APP_HOST}`)
      - traefik.http.routers.getcloser-web-http.entrypoints=web
      - traefik.http.routers.getcloser-web-http.middlewares=redirect-to-https@file
      - traefik.http.routers.getcloser-web-http.service=getcloser-web

  backend:
    build:
      context: ./backend
      labels:
        - "org.pseudolab.project=getcloser"
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_DATABASE}
      CORS_ORIGINS: "https://${APP_HOST}"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - web
      - internal
    labels:
      - traefik.enable=true
      - traefik.docker.network=web

      # --- Traefik Router (backend) ---
      - traefik.http.routers.getcloser-api.rule=Host(`${APP_HOST}`) && PathPrefix(`/api`)
      - traefik.http.routers.getcloser-api.entrypoints=websecure
      - traefik.http.routers.getcloser-api.tls=true
      - traefik.http.routers.getcloser-api.tls.certresolver=le
      - traefik.http.services.getcloser-api.loadbalancer.server.port=8000

      # /api 프리픽스 제거 (백엔드 내부는 / 기준으로 동작)
      - traefik.http.middlewares.getcloser-stripapi.stripPrefix.prefixes=/api
      - traefik.http.routers.getcloser-api.middlewares=getcloser-stripapi

      # HTTP → HTTPS 리다이렉트 (backend)
      - traefik.http.routers.getcloser-api-http.rule=Host(`${APP_HOST}`) && PathPrefix(`/api`)
      - traefik.http.routers.getcloser-api-http.entrypoints=web
      - traefik.http.routers.getcloser-api-http.middlewares=redirect-to-https@file
      - traefik.http.routers.getcloser-api-http.service=getcloser-api

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_DATABASE}"]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  postgres_data:

networks:
  web:
    external: true   # Traefik과 공유
  internal:
    driver: bridge
